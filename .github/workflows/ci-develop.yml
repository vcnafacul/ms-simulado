name: CI

on: [push]

concurrency:
  group: ci-${{ github.event.pull_request.title }}
  cancel-in-progress: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - run: npm ci
      - run: npm run build
      - run: npm run test

  lint-styles:
    name: Lint Styles
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - run: npm ci
      - run: npm run lint

  open-pr-to-develop:
    name: Open PR to develop
    runs-on: ubuntu-latest
    needs: [tests, lint-styles]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create PR
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          base: develop
          branch: ${{ github.ref_name }}
          title: 'Automatic PR from ${{ github.ref_name }} to develop'
          body: 'This PR was automatically created from the branch ${{ github.ref_name }} to develop.'
      - name: Check outputs
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: |
            echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
            echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
  
          
  push-image-dockerhub:
    name: Push Image DockerHub
    runs-on: ubuntu-latest
    needs: [open-pr-to-develop]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ms.dockerfile
          push: true
          tags: vcnafacul/simulado:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max